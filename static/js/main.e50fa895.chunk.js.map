{"version":3,"sources":["SelectBox.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["SelectBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dropDown","setState","prevState","showItems","selectItem","item","selected","toConsumableArray","state","selectedItem","push","uselected","Array","from","Set","console","log","remove","rem","filter","e","key","filterdata","filteredKeyResults","searchOnKey","dataList","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","objectSpread","items","result","onChangeHandler","bind","assertThisInitialized","event","searchResult","input","target","toUpperCase","states","i","length","indexOf","_this2","react_default","a","createElement","style","alignContent","className","map","index_es","onClick","icon","faTimes","width","onChange","concat","display","name","type","id","Component","App","margin","position","SelectBox_SelectBox","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e50fa895.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport './SelectBox.css'\n\nexport default class SelectBox extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n\t\t\t\t\t\t...this.props,\n            items: this.props.items || [],\n            showItems: false,\n\t\t\t\t\t\tselectedItem: [],\n\t\t\t\t\t\tfilteredKeyResults: [],\n\t\t\t\t\t\tdata: this.props.items,\n\t\t\t\t\t\tresult: []\n\t\t\t\t}\n\t\t\t\tthis.onChangeHandler = this.onChangeHandler.bind(this);\n    }\n\n\t\t// Showing Dropdown\n    dropDown = () => {\n        this.setState(prevState => ({\n            showItems: !prevState.showItems\n        }) )\n    }\n\n\t\t// Selecting Items for Tags\n    selectItem = (item) => {\t\n\t\t\tvar selected = [...this.state.selectedItem];\n\t\t\tselected.push(item)\n\t\t\tvar uselected = Array.from(new Set(selected));\n\t\t\tthis.setState({\n\t\t\t\t\tselectedItem: uselected,\t\t\t\t\t\t\n\t\t\t\t\tshowItems: true\n\t\t\t})\n\t\t\tconsole.log(this.state.selectedItem);\n\t\t}\n\n\t\t// Remove tags\n\t\tremove = (item) => {\n\t\t\tvar rem = [...this.state.selectedItem];\n\t\t\trem = rem.filter(e => e.key !== item)\n\t\t\tthis.setState({\n\t\t\t\tselectedItem: rem\n\t\t\t})\n\t\t}\n\t\t\n\n\t\t// Search on key\n\t\tfilterdata = () => {\n\t\t\tconst filteredKeyResults = [];\n\t\t\tconst searchOnKey = this.props.searchOnKey;\n\t\t\tconst dataList = [...this.state.data];\n\t\t\tfor(let data of dataList) {\n\t\t\t\tif(data[searchOnKey]) filteredKeyResults.push(data);\t\t\t\t\n\t\t\t}\n\t\t\tthis.setState({filteredKeyResults: filteredKeyResults})\n\t\t}\n\n\t\tcomponentDidMount() {\n\t\t\tthis.filterdata();\n\t\t}\n\t\t\n\t\tonChangeHandler(event){\n\t\t\tvar searchResult = [];\n\t\t\tconst input = event.target.value.toUpperCase();\n\t\t\tconst states = [...this.state.filteredKeyResults];\n\t\t\t\n\t\t\tfor(var i = 0; i < states.length; i++){\n\t\t\t\t\t\t\t\t\t\n\t\t\t\tif(states[i][this.props.searchOnKey].toUpperCase().indexOf(input) !== -1) searchResult.push(states[i]);\n\t\t\t}\n\t\n\t\t\tif(!event.target.value){\n\t\t\t\tsearchResult= []\n\t\t\t};\n\t\t\t\n\t\n\t\t\tthis.setState({\n\t\t\t\tresult: searchResult,\n\t\t\t\tshowItems: true\n\t\t\t});\n\t\t}\n\n    render() {\n\t\t\treturn (\n\t\t\t\t<div style={{alignContent: \"center\"}}>\n\t\t\t\t\t<div \n\t\t\t\t\t\tclassName=\"select-box--tags\">\n\t\t\t\t\t\t{this.state.selectedItem.map(item => \n\t\t\t\t\t\t\t<p className=\"tags\" key={ item.key }>\n\t\t\t\t\t\t\t\t{ item[this.props.searchOnKey] }\n\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon onClick={this.remove.bind(this,item.key)} icon={faTimes} />\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{width: this.props.width || 500}} className=\"select-box--box\">\n\t\t\t\t\t\t<div className=\"select-box--container\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tclassName=\"select-box--selected-item\"\n\t\t\t\t\t\t\t\tonChange={this.onChangeHandler}\n\t\t\t\t\t\t\t\tvalue={ this.state.selectedItem.searchOnKey }\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tclassName=\"select-box--arrow\"\n\t\t\t\t\t\t\t\tonClick={this.dropDown}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span \n\t\t\t\t\t\t\t\t\tclassName={`${this.state.showItems ? 'select-box--arrow-up' : 'select-box--arrow-down'}`}></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\tstyle={{display:this.state.showItems ? 'block' : 'none'}}\n\t\t\t\t\t\t\t\tclassName=\"select-box--items\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{`${this.state.result}` \n\t\t\t\t\t\t\t\t? this.state.result.map(item => \n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tkey={ item.key }\n\t\t\t\t\t\t\t\t\tonClick={() => this.selectItem(item)}\n\t\t\t\t\t\t\t\t\tclassName={this.state.selectedItem === item ? 'selected' : ''}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</div>)\n\n\t\t\t\t\t\t\t\t: this.state.items.map(item => \n\t\t\t\t\t\t\t\t<div \n\t\t\t\t\t\t\t\t\tkey={ item.key }\n\t\t\t\t\t\t\t\t\tonClick={() => this.selectItem(item)}\n\t\t\t\t\t\t\t\t\tclassName={this.state.selectedItem === item ? 'selected' : ''}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t\t\t</div>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype=\"hidden\" \n\t\t\t\t\t\tvalue={this.state.selectedItem.id} \n\t\t\t\t\t\tname={this.state.searchOnKey} />\n\t\t\t\t</div>\n\t\t\t)\n    }\n}\n","var data = [\n    {\n    \"key\": \"AN\",\n    \"name\": \"Andaman and Nicobar Islands\"\n    },\n    {\n    \"key\": \"AP\",\n    \"name\": \"Andhra Pradesh\"\n    },\n    {\n    \"key\": \"AR\",\n    \"name\": \"Arunachal Pradesh\"\n    },\n    {\n    \"key\": \"AS\",\n    \"name\": \"Assam\"\n    },\n    {\n    \"key\": \"BR\",\n    \"name\": \"Bihar\"\n    },\n    {\n    \"key\": \"CG\",\n    \"name\": \"Chandigarh\"\n    },\n    {\n    \"key\": \"CH\",\n    \"name\": \"Chhattisgarh\"\n    },\n    {\n    \"key\": \"DH\",\n    \"name\": \"Dadra and Nagar Haveli\"\n    },\n    {\n    \"key\": \"DD\",\n    \"name\": \"Daman and Diu\"\n    },\n    {\n    \"key\": \"DL\",\n    \"name\": \"Delhi\"\n    },\n    {\n    \"key\": \"GA\",\n    \"name\": \"Goa\"\n    },\n    {\n    \"key\": \"GJ\",\n    \"name\": \"Gujarat\"\n    },\n    {\n    \"key\": \"HR\",\n    \"name\": \"Haryana\"\n    },\n    {\n    \"key\": \"HP\",\n    \"name\": \"Himachal Pradesh\"\n    },\n    {\n    \"key\": \"JK\",\n    \"name\": \"Jammu and Kashmir\"\n    },\n    {\n    \"key\": \"JH\",\n    \"name\": \"Jharkhand\"\n    },\n    {\n    \"key\": \"KA\",\n    \"name\": \"Karnataka\"\n    },\n    {\n    \"key\": \"KL\",\n    \"name\": \"Kerala\"\n    },\n    {\n    \"key\": \"LD\",\n    \"name\": \"Lakshadweep\"\n    },\n    {\n    \"key\": \"MP\",\n    \"name\": \"Madhya Pradesh\"\n    },\n    {\n    \"key\": \"MH\",\n    \"name\": \"Maharashtra\"\n    },\n    {\n    \"key\": \"MN\",\n    \"name\": \"Manipur\"\n    },\n    {\n    \"key\": \"ML\",\n    \"name\": \"Meghalaya\"\n    },\n    {\n    \"key\": \"MZ\",\n    \"name\": \"Mizoram\"\n    },\n    {\n    \"key\": \"NL\",\n    \"name\": \"Nagaland\"\n    },\n    {\n    \"key\": \"OR\",\n    \"name\": \"Odisha\"\n    },\n    {\n    \"key\": \"PY\",\n    \"name\": \"Puducherry\"\n    },\n    {\n    \"key\": \"PB\",\n    \"name\": \"Punjab\"\n    },\n    {\n    \"key\": \"RJ\",\n    \"name\": \"Rajasthan\"\n    },\n    {\n    \"key\": \"SK\",\n    \"name\": \"Sikkim\"\n    },\n    {\n    \"key\": \"TN\",\n    \"name\": \"Tamil Nadu\"\n    },\n    {\n    \"key\": \"TS\",\n    \"name\": \"Telangana\"\n    },\n    {\n    \"key\": \"TR\",\n    \"name\": \"Tripura\"\n    },\n    {\n    \"key\": \"UK\",\n    \"name\": \"Uttar Pradesh\"\n    },\n    {\n    \"key\": \"UP\",\n    \"name\": \"Uttarakhand\"\n    },\n    {\n    \"key\": \"WB\",\n    \"name\": \"West Bengal\"\n    }\n    ]\n\nexport default data;","import React from 'react';\nimport SelectBox from './SelectBox';\nimport data from './Data';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Custom Drop-Down</h1>\n      <div style={{margin: '16px', position: 'relative'}}>\n        <SelectBox \n          items={data}\n          searchOnKey=\"name\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}